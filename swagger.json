{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "'ExpediciÃ³n Norte' API",
        "description": "Project Application API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "tags": [
        {
             "name": "Posts",
            "description": "API for posts in the system"
        },
        {
            "name": "Users",
            "description": "API for users in the system"
        }
    ],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
        "/posts": {
            "get": {
                "tags": ["Posts"],
                "summary": "Get all posts in system with pagination (default => limit=10, page=1)",
                "responses": {
                    "200": {
                    "description": "success",
                    "schema": {
                        "type": "array",
                        "$ref": "#/definitions/Post"
                    }
                    }
                },
                "parameters": [
                  {
                    "name": "limit",
                    "in": "query",
                    "default": 10,
                    "description": "The numbers of posts to return per page",
                    "schema": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "default": 1,
                    "description": "The number of page to show",
                    "schema": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  {
                    "name": "category",
                    "in": "query",
                    "description": "The category name to filter results (deporte / ruta / gastronomia / cultura)",
                    "schema": {
                      "type": "string",
                      "enum":["deporte", "ruta", "gastronomia", "cultura"]
                    }
                  },
                  {
                    "name": "orderBy",
                    "in": "query",
                    "description": "The property name to order results (desc = '-date', asc = 'date')",
                    "schema": {
                      "type": "string",
                      "$ref": "#/definitions/Post"
                    }
                  }
                ]
            },
            "post": {
                "tags": ["Posts"],
                "summary": "Create a post in system",
                "parameters": [
                    {
                      "name": "post",
                      "in": "body",
                      "description": "Post that we want to create",
                      "schema": {
                        "$ref": "#/definitions/Post"
                      }
                    }
                  ],
                "responses": {
                    "200": {
                    "description": "Post is created",
                    "schema": {
                        "$ref": "#/definitions/Post"
                    }
                    }
                }
            }
        },
        "/posts/{id}": {
            "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "ID of post that we want to find",
                  "type": "integer"
                }
              ],
             "get": {
                "tags": ["Posts"],
                "summary": "Get a post with given ID",
                "responses": {
                    "200": {
                    "description": "success",
                    "schema": {
                        "type": "array",
                        "$ref": "#/definitions/Post"
                    }
                    }
                }
            },  
            "put": {
                "tags": ["Posts"],
                "summary": "Edit a post with given ID",
                "parameters": [
                    {
                      "name": "post",
                      "in": "body",
                      "description": "Post that we want to edit",
                      "schema": {
                        "$ref": "#/definitions/Post"
                      }
                    }
                  ],
                "responses": {
                    "200": {
                        "description": "Post is updated",
                        "schema": {
                            "$ref": "#/definitions/Post"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete posts with given ID",
                "tags": ["Posts"],
                "responses": {
                  "200": {
                    "description": "Post is deleted",
                    "schema": {
                      "$ref": "#/definitions/Post"
                    }
                  }
                }
              }
        }
    },
    "definitions": {
        "Post": {
          "required": ["title", "category", "location", "price", "description", "public", "pets"],
          "properties": {
            "title": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "price": {
              "type": "number"
            },
            "description": {
                "type": "string"
            },
            "public": {
              "type": "boolean"
            },
            "pets": {
                "type": "boolean"
            }
          }
        },
        "Users": {
            "required": ["username", "email", "password", "role"],
            "properties": {
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "role": {
                "type": "string"
              }
            }
        }
    }
}